"use strict";(self.webpackChunkgds_bootcamp=self.webpackChunkgds_bootcamp||[]).push([[3632],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),b=c(n),d=a,f=b["".concat(s,".").concat(d)]||b[d]||p[d]||o;return n?r.createElement(f,u(u({ref:t},l),{},{components:n})):r.createElement(f,u({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,u=new Array(o);u[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,u[1]=i;for(var c=2;c<o;c++)u[c]=n[c];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},5057:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>u,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},u="4.1 VPC and Subnets",i={unversionedId:"infrastructure/VPC-Subnets",id:"infrastructure/VPC-Subnets",title:"4.1 VPC and Subnets",description:"Amazon Virtual Private Cloud (Amazon VPC) enables you to launch AWS resources into a virtual network that you've defined.",source:"@site/docs/infrastructure/41-VPC-Subnets.md",sourceDirName:"infrastructure",slug:"/infrastructure/VPC-Subnets",permalink:"/docs/infrastructure/VPC-Subnets",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/infrastructure/41-VPC-Subnets.md",tags:[],version:"current",sidebarPosition:41,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"4.0 Deploying with IaC",permalink:"/docs/infrastructure/Infrastructure-Setup"},next:{title:"4.2 ECS Cluster",permalink:"/docs/infrastructure/ECS-Cluster"}},s={},c=[{value:"Instructions",id:"instructions",level:4}],l={toc:c};function p(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"41-vpc-and-subnets"},"4.1 VPC and Subnets"),(0,a.kt)("p",null,"Amazon Virtual Private Cloud (Amazon VPC) enables you to launch AWS resources into a virtual network that you've defined."),(0,a.kt)("p",null,"A subnet is a range of IP addresses in your VPC. You launch AWS resources, such as Amazon EC2 instances, into your subnets. You can connect a subnet to the internet, other VPCs, and your own data centers, and route traffic to and from your subnets using route tables"),(0,a.kt)("hr",null),(0,a.kt)("h4",{id:"instructions"},"Instructions"),(0,a.kt)("p",null,"Now we will take a look at ",(0,a.kt)("inlineCode",{parentName:"p"},"vpc-subnets.yml")," to understand the creation of our VPC and subnets to hold our application."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"AWSTemplateFormatVersion: '2010-09-09'\nDescription: VPC for ecs test\n\nResources:\n\n  VPC:\n    Type: 'AWS::EC2::VPC'\n    Properties:\n      CidrBlock: '10.0.0.0/16'\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      InstanceTenancy: default\n  \n  # Two public subnets, where containers can have public IP addresses\n  PublicSubnet1:\n    Type: AWS::EC2::Subnet\n    Properties:\n      VpcId: !Ref VPC\n      AvailabilityZone: !Select [0, !GetAZs '']\n      CidrBlock: !Sub '10.0.0.0/24'\n      MapPublicIpOnLaunch: true\n\n  PublicSubnet2:\n    Type: AWS::EC2::Subnet\n    Properties:\n      VpcId: !Ref VPC\n      AvailabilityZone: !Select [1, !GetAZs '']\n      CidrBlock: !Sub '10.0.1.0/24'\n      MapPublicIpOnLaunch: true\n\n  # Setup networking resources for the public subnets. Containers\n  # in the public subnets have public IP addresses and the routing table\n  # sends network traffic via the internet gateway.\n  InternetGateway:\n    Type: 'AWS::EC2::InternetGateway'\n\n  VPCGatewayAttachment:\n    Type: 'AWS::EC2::VPCGatewayAttachment'\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n  \n  RouteTable:\n    Type: 'AWS::EC2::RouteTable'\n    Properties:\n      VpcId: !Ref VPC\n  \n  PublicSubnet1RouteTableAssociation1:\n    Type: 'AWS::EC2::SubnetRouteTableAssociation'\n    Properties:\n      SubnetId: !Ref PublicSubnet1\n      RouteTableId: !Ref RouteTable\n  \n  PublicSubnet2RouteTableAssociation2:\n    Type: 'AWS::EC2::SubnetRouteTableAssociation'\n    Properties:\n      SubnetId: !Ref PublicSubnet2\n      RouteTableId: !Ref RouteTable\n  \n  InternetRoute:\n    Type: 'AWS::EC2::Route'\n    DependsOn: VPCGatewayAttachment\n    Properties:\n      GatewayId: !Ref InternetGateway\n      RouteTableId: !Ref RouteTable\n      DestinationCidrBlock: '0.0.0.0/0'\n\nOutputs:\n\n  VPC:\n    Description: VPC\n    Value: !Ref VPC\n    Export:\n      Name: 'VPC'\n  \n  PublicSubnet1:\n    Description: 'Public Subnet 1 on AZ1'\n    Value: !Ref PublicSubnet1\n    Export:\n      Name: 'PublicSubnet1'\n  \n  PublicSubnet2:\n    Description: 'Public Subnet 2 on AZ2'\n    Value: !Ref PublicSubnet2\n    Export:\n      Name: 'PublicSubnet2'\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Proceed to upload this template to Cloudformation to provision our VPC layer and public subnets. The following is a high level diagram to illustrate what you have just built."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"vpc-subnet",src:n(123).Z,width:"878",height:"784"})))}p.isMDXComponent=!0},123:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/vpc-subnets-568f1f2552b41df125e8f524c1d00b85.png"}}]);